{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Log.js","src/Parser.js","src/Score.js","src/constants.js","src/layout.js","src/rainworld-tracker.js"],"names":[],"mappings":"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","file":"rainworld-tracker.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import * as RW from \"./constants\";\r\n\r\nexport default class Log {\r\n    constructor() {\r\n        Log.rankItems = [];\r\n        Log.score = 0;\r\n        Log.multiplier = 1;\r\n\r\n        document.querySelector(\".log .btn-close\").addEventListener(\"click\", () => {\r\n            Log.hide(); \r\n        });\r\n    }\r\n    static show(data) {\r\n        document.querySelector(\".log\").classList.remove(\"hide\");\r\n        Log.compute(data);\r\n    }\r\n    static hide() {\r\n        document.querySelector(\".log\").classList.add(\"hide\");\r\n    }\r\n    static compute(data) {\r\n        Log.clear();\r\n        //calculate the data\r\n        //food\r\n        Log.addRankItem(\"Food\", data.totalFood || 0, 1);\r\n        //successful cycles\r\n        Log.addRankItem(\"Successful cycles\", data.cycles || 0, 10);\r\n        //deaths\r\n        Log.addRankItem(\"Deaths\", data.deaths || 0, -3);\r\n        //quits\r\n        Log.addRankItem(\"Quits\", data.quits || 0, -3);\r\n        //time\r\n        Log.addRankItem(\"Time\", data.totalTimeRaw, -1, (data.totalTimeRaw != null) ? -(data.totalTimeRaw / 60) : 0);\r\n        //delivered payload\r\n        if(data.deliveredPayload)\r\n            Log.addRankItem(\"Delivered Payload\", data.deliveredPayload ? 100 : 0, 1);\r\n        //helped pebbles\r\n        if(data.helpedPebbles)\r\n            Log.addRankItem(\"Helped Five Pebbles\", data.helpedPebbles ? 40 : 0, 1);\r\n        //ascended\r\n        if(data.ascended)\r\n            Log.addRankItem(\"Ascended\", data.ascended ? 300 : 0, 1);\r\n        Log._computeScore();\r\n\r\n        //show total before creatures\r\n        Log.addTotalItem(Log.getTotalScore());\r\n\r\n        //creatures\r\n        if(data.kills != null) {\r\n            for(let i = 0 ; i < data.kills.length; i++) {\r\n                const killItemData = data.kills[i];\r\n                Log.addRankItem(`${killItemData.name} kill(s)`, killItemData.kills, killItemData.score);\r\n            }\r\n        }\r\n        Log._computeScore();\r\n        //show total before multiplier\r\n        Log.addTotalItem(Log.getTotalScore());\r\n\r\n        //achievements\r\n        const score = Log.getTotalScore();\r\n        let multiplier = 1;\r\n        for(let achievement of [data.survivor, data.wanderer, data.chieftain, data.monk, data.scholar, \r\n            data.outlaw, data.dragonSlayer, data.hunter, data.friend, data.saint]) \r\n        {\r\n            if(achievement != null) {\r\n                if(achievement.completed) {\r\n                    multiplier++;\r\n                    Log.addRankItem(achievement.name, multiplier, 0, score * multiplier, true);\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        Log.score = score * multiplier;\r\n        //show total\r\n        Log.addTotalItem(Log.score);\r\n\r\n        return Log.score;\r\n    }\r\n\r\n    static addRankItem(name, amount, value=0, handfeedScore=0, isMultiplier=false) {\r\n        const score = (handfeedScore != 0) ? handfeedScore : amount * value;\r\n        //get div\r\n        const div = RW.LogItemTemplate.cloneNode(true);\r\n        const titleDiv = div.querySelector(\".title\");\r\n        const amountDiv = div.querySelector(\".amount\");\r\n        const valueDiv =  div.querySelector(\".value\");\r\n        const totalDiv = div.querySelector(\".total\");\r\n        titleDiv.innerHTML = name;\r\n        amountDiv.innerHTML = (amount == \"\") ? \"\" : `x ${amount}`;\r\n        if(value != 0)\r\n            valueDiv.innerHTML = `@ ${value}`;\r\n        totalDiv.innerHTML = Math.floor(score);\r\n\r\n        //check for negative scores\r\n        if(valueDiv.innerHTML.indexOf(\"-\") != -1) valueDiv.classList.add(\"negative\");\r\n        if(totalDiv.innerHTML.indexOf(\"-\") != -1) totalDiv.classList.add(\"negative\");\r\n\r\n        //push into container\r\n        document.querySelector(\".log .log-list\").appendChild(div);\r\n\r\n        if(!isMultiplier) Log.rankItems.push({name, score});\r\n        else Log.multiplier++;\r\n    }\r\n    static addTotalItem(score) {\r\n        const div = RW.LogItemTotalTemplate.cloneNode(true);\r\n        div.querySelector(\".total\").innerHTML = score;\r\n\r\n        //push into container\r\n        document.querySelector(\".log .log-list\").appendChild(div);\r\n    }\r\n\r\n    static getTotalScore() {\r\n        let score = 0;\r\n        for(let item of Log.rankItems) score += parseInt(item.score);\r\n        return score;\r\n    }\r\n\r\n    static getFinalScore() {\r\n        return Log.score;\r\n    }\r\n\r\n    static _computeScore() {\r\n        Log.score += Log.getTotalScore();\r\n    }\r\n\r\n    static clear() {\r\n        Log.rankItems = [];\r\n        Log.score = 0;\r\n        Log.multiplier = 1;\r\n        document.querySelector(\".log .log-list\").innerHTML = \"\";\r\n    }\r\n}","import * as RW from \"./constants\";\r\n\r\n\r\nexport default class Parser {\r\n    static parse(txt) {\r\n        const startIndex = txt.length - txt.split(\"\").reverse().join(\"\").indexOf(\">AviDgorp<\", 10);\r\n    \r\n        const hunterText = txt.slice(startIndex);\r\n\r\n        //create save object\r\n        const hunterData = {\r\n            \"totalTime\" : getTimeFromSeconds(findDataValue(\"TOTTIME\", hunterText)),\r\n            \"totalTimeRaw\" : findDataValue(\"TOTTIME\", hunterText),\r\n            \"cycles\" : findDataValue(\"CURRVERCYCLES\", hunterText),\r\n            \"totalFood\" : findDataValue(\"TOTFOOD\", hunterText),\r\n            \"survives\" : findDataValue(\"SURVIVES\", hunterText),\r\n            \"deaths\" : findDataValue(\"DEATHS\", hunterText),\r\n            \"quits\" : findDataValue(\"QUITS\", hunterText),\r\n            \"karma\" : findDataValue(\"KARMA\", hunterText),\r\n            \"karmaCap\" : findDataValue(\"KARMACAP\", hunterText),\r\n            \"helpedPebbles\" : findDataExists(\"PEBBLESHELPED\", hunterText),\r\n            \"deliveredPayload\" : findDataExists(\"MOONREVIVED\", hunterText),\r\n            \"ascended\" : findDataExists(\"ASCENDED\", hunterText),\r\n            \"swallowedItem\" : findDataValue(\"SWALLOWEDITEMS\", hunterText, \"oA\"),\r\n            \"extraCycles\" : findDataExists(\"REDEXTRACYCLES\", hunterText),\r\n            \"kills\" : findKillValue(hunterText),\r\n            //achievements\r\n            \"survivor\" : getSurvivor(hunterText),\r\n            \"hunter\" : getHunter(hunterText),\r\n            \"saint\" : getSaint(hunterText),\r\n            \"wanderer\" : getWanderer(hunterText),\r\n            \"chieftain\" : getChieftain(hunterText),\r\n            \"monk\" : getMonk(hunterText),\r\n            \"outlaw\" : getOutlaw(hunterText),\r\n            \"dragonSlayer\" : getDragonSlayer(hunterText),\r\n            \"scholar\" : getScholar(hunterText),\r\n            \"friend\" : findAchievementValue(\"Friend\", hunterText),\r\n        };\r\n\r\n        return hunterData;\r\n    }\r\n}\r\n\r\n\r\nfunction findDataValue(id, txt, tag = \"\") {\r\n    let startIndex = txt.indexOf(id);\r\n    if(startIndex == -1) return \"\";\r\n    if(tag != \"\") startIndex = txt.indexOf(tag, startIndex);\r\n    const valueIndex = txt.indexOf(\">\", startIndex) + 1;\r\n    const valueIndexEnd = txt.indexOf(\"<\", valueIndex);\r\n\r\n    return txt.slice(valueIndex, valueIndexEnd);\r\n}\r\n\r\nfunction findAchievementValue(id, txt) {\r\n    let achievementData = {};\r\n    let startIndex = txt.indexOf(id);\r\n    if(startIndex == -1) return null;\r\n    startIndex = txt.indexOf(\"egA\", startIndex);\r\n    let valueIndex = txt.indexOf(\">\", startIndex) + 1;\r\n    let valueIndexEnd = txt.indexOf(\"<\", valueIndex);\r\n    achievementData.addIfMissing = txt.slice(valueIndex, valueIndexEnd);\r\n    //reuse for second val\r\n    valueIndex = txt.indexOf(\">\", valueIndexEnd) + 1;\r\n    valueIndexEnd = txt.indexOf(\"<\", valueIndex);\r\n    achievementData.data = txt.slice(valueIndex, valueIndexEnd);\r\n\r\n    //not sure what to do with this flag?\r\n    delete achievementData.addIfMissing;\r\n\r\n    return achievementData;\r\n}\r\n\r\nfunction findKillValue(txt) {\r\n    let startIndex = txt.indexOf(\"KILLS\") + 5;\r\n    let endIndex = txt.lastIndexOf(\"svD\");\r\n    endIndex = txt.indexOf(\"<\", endIndex);\r\n    //splice out text\r\n    const killText = txt.slice(startIndex, endIndex);\r\n    //array up\r\n    let killArray = killText.split(\">\");\r\n    killArray = killArray.map(el => el.replace(\"<svB\", \"\").replace(\"<svC\", \"\").replace(\"<svD\", \"\"));\r\n    killArray.shift();\r\n\r\n    //decipher the data\r\n    let result = [];\r\n    for(let i = 0; i < killArray.length; i+=2) {\r\n        const rawID = killArray[i];\r\n        const amount = parseInt(killArray[i+1]);\r\n        //decipher the creature type\r\n        let creatureID = parseInt(rawID.split(\"-\")[0]);\r\n        //if the id is a 32 (freak num), check the variant as well\r\n        if(creatureID == 32) creatureID = parseInt(\"32\" + rawID.split(\"-\")[2]);\r\n        //go find the creature\r\n        const creature = _getCreatureByID(creatureID);\r\n        if(creature != null) {\r\n            creature.kills = amount;\r\n            result.push(creature);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction findDataExists(id, txt) {\r\n    return txt.indexOf(id) != -1;\r\n}\r\n\r\n\r\nfunction _getCreatureByID(id) {\r\n    for(let key of Object.keys(RW.CreatureLookup)) {\r\n        if(RW.CreatureLookup[key].id == id) {\r\n            let creatureObj = RW.CreatureLookup[key];\r\n            creatureObj.key = key;\r\n            creatureObj.name = creatureObj.name || key;\r\n            return creatureObj;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n\r\n\r\nfunction getTimeFromSeconds(time) {\r\n    const hours = Math.floor(time / 3600);\r\n    const minutes = _setToTens(Math.floor(time % 3600 / 60));\r\n    const seconds = _setToTens(Math.floor(time % 3600 % 60));\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nfunction _setToTens(time) {\r\n    if(time.toString().split(\"\").length < 2) return time.toString() + \"0\";\r\n    return time;\r\n}\r\n\r\n/*----- SPECIALIZED -----*/\r\nfunction getSurvivor(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Survivor\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    value.completed = parseInt(value.data) >= RW.AchievementPointRequirements.survivor;\r\n    value.name = \"The Survivor\";\r\n\r\n    return value;\r\n}\r\nfunction getHunter(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Hunter\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    value.completed = parseInt(value.data) >= RW.AchievementPointRequirements.hunter;\r\n    value.name = \"The Hunter\";\r\n\r\n    return value;\r\n}\r\nfunction getSaint(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Saint\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n    \r\n    value.completed = parseInt(value.data) >= RW.AchievementPointRequirements.saint;\r\n    value.name = \"The Saint\";\r\n\r\n    return value;\r\n}\r\nfunction getWanderer(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Traveller\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    //interpret data\r\n    const dataArray = value.data.split(\".\");\r\n    value.data = dataArray.map((el) => (el == \"1\") ? 1 : 0);\r\n    //add the places wandered to\r\n    value.visited = _getPlacesArray(dataArray);\r\n    value.notVisited = _getPlacesArray(_reverseDataArray(dataArray));\r\n\r\n    value.completed = value.visited.length >= RW.AchievementPointRequirements.traveller;\r\n    value.name = \"The Wanderer\";\r\n\r\n    return value;\r\n}\r\nfunction getChieftain(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Chieftain\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    value.completed = parseFloat(value.data) >= RW.AchievementPointRequirements.chieftain;\r\n    value.name = \"The Chieftain\";\r\n\r\n    return value;\r\n}\r\nfunction getMonk(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Monk\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    value.completed = parseInt(value.data) >= RW.AchievementPointRequirements.monk;\r\n    value.name = \"The Monk\";\r\n\r\n    return value;\r\n}\r\nfunction getOutlaw(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Outlaw\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    value.completed = parseInt(value.data) >= RW.AchievementPointRequirements.outlaw;\r\n    value.name = \"The Outlaw\";\r\n\r\n    return value;\r\n}\r\nfunction getDragonSlayer(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"DragonSlayer\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n    \r\n    //interpret data\r\n    let dataArray = value.data.split(\".\");\r\n    dataArray.pop();\r\n    value.data = dataArray.map((el) => (el == \"1\") ? 1 : 0);\r\n    //add the lizards killed    \r\n    value.lizardsKilled = _getLizardsArray(dataArray);\r\n    value.lizardsLeft = _getLizardsArray(_reverseDataArray(dataArray));\r\n\r\n\r\n    value.completed = value.lizardsKilled.length >= RW.AchievementPointRequirements.dragonSlayer;\r\n    value.name = \"The Dragon Slayer\";\r\n\r\n    return value;\r\n}\r\nfunction getScholar(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Scholar\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    value.data = value.data.split(\".\").map(el => parseInt(el));\r\n    value.completed = value.data.length >= RW.AchievementPointRequirements.scholar;\r\n    value.name = \"The Scholar\";\r\n\r\n    return value;\r\n}\r\nfunction getFriend(txt) {\r\n    //first, see if it exists\r\n    const value = findAchievementValue(\"Friend\", txt);\r\n    if(value == null) return null;\r\n    if(Object.keys(value).length === 0) return null;\r\n\r\n    value.completed = parseFloat(value.data) >= RW.AchievementPointRequirements.friend;\r\n    value.name = \"The Friend\";\r\n\r\n    return value;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction _reverseDataArray(dataArray) {\r\n    let result = [];\r\n    for(let i = 0; i < dataArray.length; i++)\r\n        if(dataArray[i] == \"1\") result.push(\"0\");\r\n        else result.push(\"1\");\r\n    return result;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction _getLizardsArray(dataArray) {\r\n    let lizardArray = [];\r\n    for(let i = 0; i < dataArray.length; i++) {\r\n        if(dataArray[i] == \"1\") {\r\n            switch(i) {\r\n                case 0: lizardArray.push(\"green\"); break;\r\n                case 1: lizardArray.push(\"magenta\"); break;\r\n                case 2: lizardArray.push(\"blue\"); break;\r\n                case 3: lizardArray.push(\"white\"); break;\r\n                case 4: lizardArray.push(\"yellow\"); break;\r\n                case 5: lizardArray.push(\"black\");\r\n            }\r\n        }\r\n    }\r\n    return lizardArray;\r\n}\r\n\r\n\r\nfunction _getPlacesArray(dataArray) {\r\n    let placesArray = [];\r\n    for(let i = 0; i < dataArray.length; i++) {\r\n        if(dataArray[i] == \"1\") {\r\n            switch(i) {\r\n                case 0: placesArray.push(\"Outskirts\"); break;\r\n                case 1: placesArray.push(\"Industrial Complex\"); break;\r\n                case 2: placesArray.push(\"Drainage System\"); break;\r\n                case 3: placesArray.push(\"Chimney Canopy\"); break;\r\n                case 4: placesArray.push(\"Garbage Wastes\"); break;\r\n                case 5: placesArray.push(\"Shaded Citadel\"); break;\r\n                case 6: placesArray.push(\"Shoreline\"); break;\r\n                case 7: placesArray.push(\"Sky Islands\"); break;\r\n                case 8: placesArray.push(\"Farm Arrays\"); break;\r\n                case 9: placesArray.push(\"Exterior\"); break;\r\n                case 10: placesArray.push(\"Five Pebbles\"); break;\r\n                case 11: placesArray.push(\"Subterranean\"); break;\r\n            }\r\n        }\r\n    }\r\n    return placesArray;\r\n}\r\n\r\n\r\n\r\nfunction _getKillsArray(dataArray) {\r\n    let killsArray = [];\r\n}","import Log from './Log';\r\n\r\nexport default class Score {\r\n    constructor() {\r\n        Score.data = null;\r\n\r\n        document.querySelector(\".current-score .btn-stats\").addEventListener(\"click\", () => {\r\n            if(Score.data == null) return;\r\n            Log.show(Score.data);\r\n        });\r\n\r\n        document.querySelector(\".current-score .btn-close\").addEventListener(\"click\", () => {\r\n            Score.hide(); \r\n        });\r\n    }\r\n\r\n    static show(data) {\r\n        const score = (data != null) ? Log.compute(data) : 0;\r\n        document.querySelector(\".current-score .score\").innerHTML = score;\r\n        document.querySelector(\".current-score\").classList.remove(\"hide\");\r\n        Score.data = data;\r\n    }\r\n\r\n    static hide() {\r\n        Score.data = null;\r\n        document.querySelector(\".current-score\").classList.add(\"hide\");\r\n    }\r\n}","const RegionLookup = Object.freeze({\r\n    \"Outskirts\" : \"os\",\r\n    \"Industrial Complex\" : \"ic\",\r\n    \"Drainage System\" : \"ds\",\r\n    \"Chimney Canopy\" : \"cc\",\r\n    \"Garbage Wastes\" : \"gw\",\r\n    \"Shaded Citadel\" : \"sh\",\r\n    \"Shoreline\" : \"sl\",\r\n    \"Sky Islands\" : \"si\",\r\n    \"Farm Arrays\" : \"fa\",\r\n    \"Exterior\" : \"ex\",\r\n    \"Five Pebbles\" : \"fp\",\r\n    \"Subterranean\" : \"sb\",\r\n    \"Depths\" : \"dp\"\r\n});\r\n\r\n\r\nconst DefaultScores = Object.freeze({\r\n    \"Food\" : 1,\r\n    \"Survival\" : 5\r\n});\r\n\r\n//scores are in SandboxSettingsInterface | IDs are in MultiplayerUnlocks - SandboxUnlockID\r\n//the image IDs are CreatureTemplate.Type references, however\r\nconst CreatureLookup = Object.freeze({\r\n    \"Slugcat\" : {name:\"Slugcat\", id:1, score:5},\r\n    \"GreenLizard\" : {name:\"Green Lizard\", id:4, score:10},\r\n    \"PinkLizard\" : {name:\"Pink Lizard\", id:3, score:7},\r\n    \"BlueLizard\" : {name:\"Blue Lizard\", id:5, score:6},\r\n    \"WhiteLizard\" : {name:\"White Lizard\", id:7, score:8},\r\n    \"BlackLizard\" : {name:\"Black Lizard\", id:9, score:7},\r\n    \"YellowLizard\" : {name:\"Yellow Lizard\", id:6, score:6},\r\n    \"CyanLizard\" : {name:\"Cyan Lizard\", id:11, score:9},\r\n    \"RedLizard\" : {name:\"Red Lizard\", id:8, score:25},\r\n    \"Salamander\" : {name:\"salamander\", id:10, score:7},\r\n    \"CicadaA\" : {name:\"White Cicada\", id:19, score:2},\r\n    \"CicadaB\" : {name:\"Black Cicada\", id:20, score:2},\r\n    \"Snail\" : {name:\"Snail\", id:15, score:1},\r\n    \"PoleMimic\" : {name:\"Pole Plant\", id:29, score:2},\r\n    \"TentaclePlant\" : {name:\"Monster Kelp\", id:28, score:7},\r\n    \"Scavenger\" : {name:\"Scavenger\", id:36, score:6},\r\n    \"Vulture\" : {name:\"Vulture\", id:16, score:15},\r\n    \"KingVulture\" : {name:\"King Vulture\", id:45, score:25},\r\n    // \"SmallCentipede\" : {name:\"Small Centipede\", id:321, score:4},  //added their variant to the ID\r\n    \"SmallCentipede\" : {name:\"Small Centipede\", id:322, score:4},  //added their variant to the ID\r\n    // \"Centipede\" : {name:\"Centipede\", id:322, score:7},\r\n    \"Centipede\" : {name:\"Centipede\", id:321, score:7},\r\n    \"LargeCentipede\" : {name:\"Large Centipede\", id:323, score:7},\r\n    \"RedCentipede\" : {name:\"Red Centipede\", id:33, score:19},\r\n    \"Centiwing\" : {name:\"Centiwing\", id:34, score:5},\r\n    \"Tubeworm\" : {name:\"Garbage Worm\", id:25, score:1},\r\n    \"Hazer\" : {name:\"Hazer\", id:46, score:1},\r\n    \"LanternMouse\" : {name:\"Lantern Mouse\", id:18, score:2},\r\n    \"BigSpider\" : {name:\"Spider\", id:40, score:4},\r\n    \"SpitterSpider\" : {name:\"Tranq Spider\", id:41, score:5},\r\n    \"MirosBird\" : {name:\"Scissorbird\", id:30, score:16},\r\n    \"BrotherLongLegs\" : {name:\"Brother Long Legs\", id:27, score:14},\r\n    \"DaddyLongLegs\" : {name:\"Daddy Long Legs\", id:26, score:25},\r\n    \"Deer\" : {name:\"Raindeer\", id:24, score:10}, //??Doesn't have a score?\r\n    \"EggBug\" : {name:\"Egg Bug\", id:39, score:2},\r\n    \"DropBug\" : {name:\"Dropwig\", id:44, score:5},\r\n    \"BigNeedleWorm\" : {name:\"Noodlefly\", id:43, score:5},\r\n    \"JetFish\" : {name:\"Jet Fish\", id:22, score:4},\r\n    \"Leviathan\" : {name:\"Leviathan\", id:23, score:25},\r\n    \"Overseer\" : {name:\"Overseer\", id:37, score:2}, //??\r\n});\r\n\r\n\r\nconst AchievementPointRequirements = Object.freeze({\r\n    \"survivor\" : 5,\r\n    \"hunter\": 12,\r\n    \"saint\" : 12,\r\n    \"traveller\" : 12,\r\n    \"chieftain\" : 1,\r\n    \"monk\" : 12,\r\n    \"outlaw\" : 7,\r\n    \"dragonSlayer\": 6,\r\n    \"scholar\" : 3,\r\n    \"friend\" : 12,\r\n});\r\n\r\n\r\nconst KarmaAtlasSize = Object.freeze({\r\n    \"width\" : 90,\r\n    \"height\" : 90\r\n});\r\nconst KarmaCapTracker = Object.freeze({\r\n    \"9\" : 0,\r\n    \"8\" : 1,\r\n    \"7\" : 2,\r\n    \"6\" : 3,\r\n    \"5\" : 4,\r\n    \"4\" : 4,\r\n    \"3\" : 4,\r\n    \"2\" : 4,\r\n    \"1\" : 4,\r\n    \"0\" : 4\r\n});\r\n\r\n//large centipede is 32-0-3\r\n//med is 32-0-2\r\n//small is 32-0-1\r\n\r\n//31*26\r\nconst SpriteAtlasSize = Object.freeze({\r\n    \"width\" : 31,\r\n    \"height\" : 26\r\n});\r\nconst SpriteAtlasIndex = Object.freeze({\r\n    \"Leviathan\" : {x:0,y:0},\r\n    \"Slugcat\" : {x:1,y:0},\r\n    \"GreenLizard\" : {x:2,y:0},\r\n    \"PinkLizard\" : {x:3,y:0},\r\n    \"BlueLizard\" : {x:5,y:0},\r\n    \"WhiteLizard\" : {x:0,y:1},\r\n    \"BlackLizard\" : {x:1,y:1},\r\n    \"YellowLizard\" : {x:2,y:1},\r\n    \"CyanLizard\" : {x:3,y:1},\r\n    \"RedLizard\" : {x:4,y:1},\r\n    \"Salamander\" : {x:5,y:1},\r\n    \"CicadaA\" : {x:0,y:2},\r\n    \"CicadaB\" : {x:1,y:2},\r\n    \"Snail\" : {x:2,y:2},\r\n    \"PoleMimic\" : {x:3,y:2},\r\n    \"TentaclePlant\" : {x:4,y:2},\r\n    \"Scavenger\" : {x:5,y:2},\r\n    \"Vulture\" : {x:0,y:3},\r\n    \"KingVulture\" : {x:1,y:3},\r\n    \"SmallCentipede\" : {x:2,y:3},\r\n    \"Centipede\" : {x:3,y:3},\r\n    \"LargeCentipede\" : {x:4,y:3},\r\n    \"RedCentipede\" : {x:5,y:3},\r\n    \"Centiwing\" : {x:0,y:4},\r\n    \"LanternMouse\" : {x:1,y:4},\r\n    \"BigSpider\" : {x:2,y:4},\r\n    \"SpitterSpider\" : {x:3,y:4},\r\n    \"MirosBird\" : {x:4,y:4},\r\n    \"BrotherLongLegs\" : {x:5,y:4},\r\n    \"DaddyLongLegs\" : {x:0,y:5},\r\n    \"EggBug\" : {x:1,y:5},\r\n    \"DropBug\" : {x:2,y:5},\r\n    \"BigNeedleWorm\" : {x:3,y:5},\r\n    \"JetFish\" : {x:4,y:5},\r\n    \"Deer\" : {x:5,y:5},\r\n    \"Overseer\" : {x:4,y:0}\r\n});\r\n\r\n\r\n//get the creature kill template\r\nconst CreatureKillTemplate = document.querySelector(\".creature-kill\");\r\nCreatureKillTemplate.remove();\r\n\r\n\r\n//get the log item template\r\nconst LogItemTemplate = document.querySelector(\".log-item\");\r\nLogItemTemplate.remove();\r\n\r\n//get the total template\r\nconst LogItemTotalTemplate = document.querySelector(\".log-item.full-total\");\r\nLogItemTotalTemplate.remove();\r\n\r\n\r\n\r\nexport { RegionLookup, DefaultScores, CreatureLookup, \r\n    AchievementPointRequirements, KarmaAtlasSize, KarmaCapTracker,\r\n    SpriteAtlasSize, SpriteAtlasIndex, \r\n    CreatureKillTemplate, LogItemTemplate, LogItemTotalTemplate };","import * as RW from \"./constants\";\r\n\r\nexport default class Layout {\r\n    static show(data) {\r\n        //first, clear the data\r\n        Layout.clear();\r\n        const { \r\n            totalTime, totalFood, cycles, extraCycles,\r\n            survives, deaths, quits, kills,\r\n            swallowedItem, helpedPebbles, deliveredPayload, ascended,\r\n            wanderer, scholar, survivor, outlaw, hunter, friend, monk, chieftain, saint, dragonSlayer,\r\n            karma, karmaCap\r\n        } = data;\r\n        \r\n        //general data\r\n        document.querySelector(\".totalTime\").innerHTML = totalTime;\r\n        document.querySelector(\".totalFood\").innerHTML = totalFood;\r\n        document.querySelector(\".totalCycles\").innerHTML = cycles;\r\n        document.querySelector(\".remainingCycles\").innerHTML = (20 - parseInt(cycles) + ((extraCycles) ? 5 : 0)) || \"\";\r\n        document.querySelector(\".survives\").innerHTML = survives;\r\n        document.querySelector(\".deaths\").innerHTML = deaths;\r\n        document.querySelector(\".quits\").innerHTML = quits;\r\n        document.querySelector(\".currentKarma\").innerHTML = karma;\r\n        document.querySelector(\".karmaCap\").innerHTML = karmaCap;\r\n        document.querySelector(\".quits\").innerHTML = quits;\r\n        document.querySelector(\".itemSwallowed\").innerText = (swallowedItem != \"\") ? swallowedItem : \"<None>\";\r\n        document.querySelector(\".helpedPebbles\").innerHTML = (helpedPebbles) ? \"Yes\" : \"No\";\r\n        document.querySelector(\".deliveredPayload\").innerHTML = (deliveredPayload) ? \"Yes\" : \"No\";\r\n        document.querySelector(\".ascended\").innerHTML = (ascended) ? \"Yes\" : \"No\";\r\n\r\n        //setup places\r\n        if(wanderer != null) {\r\n            //toggle unlocked on any that are completed\r\n            const divs = document.querySelectorAll(\"[data-region]\");\r\n            for(let i = 0; i < divs.length; i++) {\r\n                const regDiv = divs[i];\r\n                const fullName = getKeyByValue(RW.RegionLookup, regDiv.dataset.region);\r\n                if(wanderer.visited.indexOf(fullName) != -1) regDiv.classList.add(\"unlocked\");\r\n                else regDiv.classList.remove(\"unlocked\");\r\n            }\r\n            //handle depths\r\n            if(ascended) document.querySelector(\"[data-region='dp']\").classList.add(\"unlocked\");\r\n            else document.querySelector(\"[data-region='dp']\").classList.remove(\"unlocked\");\r\n        }\r\n\r\n        //achievements\r\n        //survivor\r\n        if(survivor != null) {\r\n            //unhide others\r\n            document.querySelector(\".survivor-hidden\").classList.remove(\"hide\");\r\n            setupPipAchievement(\"survivor\", RW.AchievementPointRequirements.survivor, survivor, true);\r\n        }\r\n        //wanderer\r\n        if(wanderer != null) {\r\n            setupPipAchievement(\"wanderer\", RW.AchievementPointRequirements.traveller, wanderer);\r\n        }\r\n        //scholar\r\n        if(scholar != null) {\r\n            setupPipAchievement(\"scholar\",RW. AchievementPointRequirements.scholar, scholar);\r\n        }    \r\n        //outlaw\r\n        if(outlaw != null) {\r\n        setupIntAchievement(\"outlaw\", RW.AchievementPointRequirements.outlaw, outlaw);\r\n        }\r\n        //hunter\r\n        if(hunter != null) {\r\n            setupIntAchievement(\"hunter\", RW.AchievementPointRequirements.hunter, hunter);\r\n        }\r\n        //friend\r\n        if(friend != null) {\r\n            setupFloatAchievement(\"friend\", RW.AchievementPointRequirements.friend, friend);\r\n        }\r\n        //monk\r\n        if(monk != null) {\r\n            setupIntAchievement(\"monk\", RW.AchievementPointRequirements.monk, monk);\r\n        }\r\n        //chieftain\r\n        if(chieftain != null) {\r\n            setupFloatAchievement(\"chieftain\", RW.AchievementPointRequirements.chieftain, chieftain);\r\n        }\r\n        //saint\r\n        if(saint != null) {\r\n            setupIntAchievement(\"saint\", RW.AchievementPointRequirements.saint, saint);\r\n        }\r\n        //dragonSlayer\r\n        if(dragonSlayer != null) {\r\n        setupDragonSlayer(RW.AchievementPointRequirements.dragonSlayer, dragonSlayer);\r\n        }\r\n\r\n\r\n\r\n        //handle karma data\r\n        if(karma != null) {\r\n            const activeKarmaDiv = document.querySelector(\".karma.active\");\r\n            const inactiveKarmaDiv = document.querySelector(\".karma.inactive\");\r\n            //look for a karma cap\r\n            let cap = karmaCap || 4;\r\n            //compare for column index\r\n            const column = RW.KarmaCapTracker[cap.toString()];\r\n            //move to proper index\r\n            activeKarmaDiv.style.backgroundPositionX = \r\n                inactiveKarmaDiv.style.backgroundPositionX = `${-column * RW.KarmaAtlasSize.width}px`;\r\n            //move dial to proper y position\r\n            //switch the active to the current type\r\n            const offsetY = (karmaCap - karma) * RW.KarmaAtlasSize.height;\r\n            activeKarmaDiv.style.backgroundPositionY = `-${offsetY}px`;\r\n            inactiveKarmaDiv.style.backgroundPositionY = `calc(-50% - ${offsetY + 75}px)`;\r\n\r\n        }\r\n\r\n\r\n\r\n        //handle kills data\r\n        if(kills != null) {\r\n            if(kills.length <= 0) return;\r\n            //order by biggest boy points\r\n            // kills.sort((a, b) => a.score > b.score ? -1 : 1);\r\n            //order by hierarchy\r\n            kills.sort((a, b) => {\r\n                const keys = Object.keys(RW.SpriteAtlasIndex);\r\n                if(keys.indexOf(a.key) > keys.indexOf(b.key)) return 1;\r\n                else return -1;\r\n            });\r\n            for(let killData of kills) {\r\n                //create a kill template\r\n                const killDiv = RW.CreatureKillTemplate.cloneNode(true);\r\n                killDiv.querySelector(\".kill-amount\").innerHTML = killData.kills;\r\n                killDiv.querySelector(\".kill-worth\").innerHTML = `x${killData.score}`;\r\n\r\n                //get the icon\r\n                const position = RW.SpriteAtlasIndex[killData.key];\r\n\r\n                const iconDiv = killDiv.querySelector(\".creature-icon\");\r\n                const x = position.x * RW.SpriteAtlasSize.width;\r\n                const y = position.y * RW.SpriteAtlasSize.height;\r\n                iconDiv.style.backgroundPositionX = `${-x}px`;\r\n                iconDiv.style.backgroundPositionY = `${-y}px`;\r\n\r\n                //add a hover\r\n                iconDiv.title = killDiv.querySelector(\".kill-amount\").title = killData.name;\r\n\r\n                //attach to container\r\n                document.querySelector(\".creature-kill-container\").appendChild(killDiv);\r\n\r\n                // return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    static clear() {\r\n        //relock map\r\n        const mapDivs = document.querySelectorAll(\"[data-region]\");\r\n        mapDivs.forEach((el) => el.classList.remove(\"unlocked\"));\r\n\r\n        //delete kills\r\n        const killDivs = document.querySelectorAll(\".creature-kill\");\r\n        killDivs.forEach((el) => {\r\n            el.remove();\r\n            el = null;\r\n        });\r\n\r\n\r\n        //reset achievements\r\n        const achieveDivs = document.querySelectorAll(\".achievement\");\r\n        achieveDivs.forEach((el) => {\r\n            el.classList.remove(\"complete\");\r\n            el.classList.add(\"inactive\");\r\n\r\n            const pips = el.querySelector(\".pips\");\r\n            if(pips != null) pips.innerHTML = \"\";\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction setupPipAchievement(id, pointRequirement, obj, staticValue=false) {\r\n    const aDiv = document.querySelector(`[data-achievement='${id}']`);\r\n    aDiv.classList.remove(\"inactive\");\r\n    //set the pips\r\n    const pipsDiv = aDiv.querySelector(\".pips\");\r\n    // const length = (staticValue) ? parseInt(obj.data) : obj.data.length;\r\n    for(let i = 0; i < pointRequirement; i++) {\r\n        const pip = document.createElement(\"div\");\r\n        if(staticValue) { \r\n            if(parseInt(obj.data) > i) pip.classList.add(\"pip\", \"full\");\r\n            else pip.classList.add(\"pip\", \"empty\");\r\n        }\r\n        else {\r\n            if(obj.data[i] == 1) pip.classList.add(\"pip\", \"full\");\r\n            else if(obj.data[i] != 1 && obj.data[i] != 0 && i < obj.data.length) pip.classList.add(\"pip\", \"full\"); //data-pearl\r\n            else pip.classList.add(\"pip\", \"empty\");\r\n        }\r\n        pipsDiv.appendChild(pip);\r\n    }\r\n\r\n    const progressDiv = aDiv.querySelector(\".progress\");\r\n    if(pipsDiv.childNodes.length > 0) {\r\n        progressDiv.innerHTML = \"\";\r\n    }\r\n    if(obj.completed) aDiv.classList.add(\"complete\");\r\n}\r\n\r\nfunction setupIntAchievement(id, pointRequirement, obj) {\r\n    const aDiv = document.querySelector(`[data-achievement='${id}']`);\r\n    aDiv.classList.remove(\"inactive\");\r\n    //set the status\r\n    const statusDiv = aDiv.querySelector(\".status-bar .slider\");\r\n    const perc = (parseInt(obj.data) / pointRequirement) * 100;\r\n    statusDiv.style.left = `${perc}%`;\r\n\r\n    const progressDiv = aDiv.querySelector(\".progress\");\r\n    progressDiv.innerHTML = \"\";\r\n    if(obj.completed) aDiv.classList.add(\"complete\");\r\n\r\n    const countDiv = aDiv.querySelector(\".count\");\r\n    countDiv.innerHTML = `${parseInt(obj.data)}/${pointRequirement}`;\r\n}\r\n\r\nfunction setupFloatAchievement(id, pointRequirement, obj) {\r\n    const aDiv = document.querySelector(`[data-achievement='${id}']`);\r\n    aDiv.classList.remove(\"inactive\");\r\n    //set the status\r\n    const statusDiv = aDiv.querySelector(\".status-bar .slider\");\r\n    const perc = (parseFloat(obj.data) / pointRequirement) * 100;\r\n    statusDiv.style.left = `${perc}%`;\r\n\r\n    const progressDiv = aDiv.querySelector(\".progress\");\r\n    progressDiv.innerHTML = \"\";\r\n    if(obj.completed) aDiv.classList.add(\"complete\");\r\n\r\n    const countDiv = aDiv.querySelector(\".count\");\r\n    countDiv.innerHTML = `${parseFloat(obj.data).toFixed(2)}/${pointRequirement}`;\r\n}\r\n\r\nfunction setupDragonSlayer(pointRequirement, obj) {\r\n    const aDiv = document.querySelector(\"[data-achievement='dragonSlayer']\");\r\n    aDiv.classList.remove(\"inactive\");\r\n    //set the pips\r\n    const pipsDiv = aDiv.querySelector(\".pips\");\r\n    for(let i = 0; i < obj.data.length; i++) {\r\n        const pip = document.createElement(\"div\");\r\n        if(obj.data[i] == \"1\") pip.classList.add(\"pip\", \"full\", \"dragon-slayer\", `pip-${i}`);\r\n        else pip.classList.add(\"pip\", \"empty\");\r\n        pipsDiv.appendChild(pip);\r\n    }\r\n\r\n    if(obj.completed) aDiv.classList.add(\"complete\");\r\n}\r\n\r\n\r\nfunction getKeyByValue(object, value) {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n}\r\n","import Log from './Log';\r\nimport * as RW from \"./constants\";\r\nimport Parser from \"./Parser\";\r\nimport Layout from \"./layout\";\r\nimport Score from \"./Score\";\r\n\r\n\r\nnew Log();\r\nnew Score();\r\n\r\nlet rainworldData;\r\n\r\n\r\n//listen for save file change\r\ndocument.getElementById(\"file-upload\").addEventListener(\"change\", (e) => {\r\n    //if we have a value, fetch and send\r\n    if(e.target.files.length <= 0) return;\r\n    //try to parse\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = (ev) => {\r\n        // console.log(fileReader.result);\r\n        const data = Parser.parse(fileReader.result);\r\n        Layout.show(data);\r\n        rainworldData = data;\r\n\r\n        //set the name in the text\r\n        document.querySelector(\".file-input .name\").innerHTML = e.target.files[0].name;\r\n    };\r\n    fileReader.readAsText(e.target.files[0]);\r\n});\r\n\r\n\r\n\r\ndocument.querySelector(\".btn-calculate\").addEventListener(\"click\", () => {\r\n    Score.show(rainworldData);\r\n});\r\ndocument.querySelector(\".btn-sample\").addEventListener(\"click\", () => {\r\n    //show sample file\r\n    fetch('sav-comp.txt')\r\n    .then(function(blob) {\r\n        return blob.text();\r\n    })\r\n    .then(function(txt) {\r\n        //parse out hunter data\r\n        const data = Parser.parse(txt);\r\n        rainworldData = data;\r\n        Layout.show(data);\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n/*------------- LAYOUT ----------------*/\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}